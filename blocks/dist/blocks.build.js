/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./blocks/src/blocks.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./blocks/src/block/block.js":
/*!***********************************!*\
  !*** ./blocks/src/block/block.js ***!
  \***********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _edit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edit */ "./blocks/src/block/edit.js");
/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style.scss */ "./blocks/src/block/style.scss");
/* harmony import */ var _style_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_scss__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _editor_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./editor.scss */ "./blocks/src/block/editor.scss");
/* harmony import */ var _editor_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_editor_scss__WEBPACK_IMPORTED_MODULE_2__);
// Import registerBlockType() from block building libary
var registerBlockType=wp.blocks.registerBlockType,createElement=wp.element.createElement,__=wp.i18n.__,_wp$editor=wp.editor,AlignmentToolbar=_wp$editor.AlignmentToolbar,BlockControls=_wp$editor.BlockControls,InspectorControls=_wp$editor.InspectorControls,PanelColorSettings=_wp$editor.PanelColorSettings,_wp$components=wp.components,Icon=_wp$components.Icon,ColorPicker=_wp$components.ColorPicker,TextControl=_wp$components.TextControl,SelectControl=_wp$components.SelectControl,ToggleControl=_wp$components.ToggleControl,ServerSideRender=_wp$components.ServerSideRender,PanelBody=_wp$components.PanelBody,PanelRow=_wp$components.PanelRow;// React.createElement
/**
 * Internal dependencies
 */// Import SCSS files
// SVG icon
var iconEl=function(){return wp.element.createElement(Icon,{icon:wp.element.createElement("svg",null,wp.element.createElement("path",{d:"M10 2C4.478 2 0 5.425 0 9.646c0 1.404.503 2.717 1.366 3.846L.032 18 5.6 16.508c1.329.499 2.818.787 4.4.787 5.523 0 10-3.424 10-7.648C20 5.425 15.523 2 10 2zm-3.978 8.51c-.671 0-1.216-.547-1.216-1.223s.545-1.223 1.216-1.223c.673 0 1.217.547 1.217 1.223s-.544 1.223-1.217 1.223zm3.731 0c-.672 0-1.217-.547-1.217-1.223s.545-1.223 1.217-1.223 1.216.547 1.216 1.223-.544 1.223-1.216 1.223zm3.809 0c-.67 0-1.215-.547-1.215-1.223s.545-1.223 1.215-1.223c.674 0 1.217.547 1.217 1.223s-.543 1.223-1.217 1.223z"}))})};// Register new Block
registerBlockType("social-proof-slider/main",{title:__("SP Testimonials Slider"),description:__("Display a Social Proof Testimonials Slider"),icon:iconEl,category:"common",attributes:{textalign:{type:"string"},showarrows:{type:"boolean",default:!1},autoplay:{type:"boolean",default:!0},displaytime:{type:"number",default:3},animationstyle:{type:"string",default:"fade"},showdots:{type:"boolean",default:!1},adaptiveheight:{type:"boolean",default:!1},showfeaturedimages:{type:"boolean",default:!1},paddingsync:{type:"boolean",default:!0},paddingunit:{type:"string",default:"px"},padding:{type:"number",default:50},paddingtop:{type:"number",default:0},paddingright:{type:"number",default:0},paddingbottom:{type:"number",default:0},paddingleft:{type:"number",default:0},bgcolor:{type:"string"},testimonialtextcolor:{type:"string"},authornamecolor:{type:"string"},authortitlecolor:{type:"string"}},edit:_edit__WEBPACK_IMPORTED_MODULE_0__["default"],save:function save(a){a.attributes;return null}});

/***/ }),

/***/ "./blocks/src/block/edit.js":
/*!**********************************!*\
  !*** ./blocks/src/block/edit.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _margin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./margin */ "./blocks/src/block/margin.js");
/* harmony import */ var _padding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./padding */ "./blocks/src/block/padding.js");
function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}function _possibleConstructorReturn(a,b){return b&&("object"===_typeof(b)||"function"==typeof b)?b:_assertThisInitialized(a)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _getPrototypeOf(a){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},_getPrototypeOf(a)}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&_setPrototypeOf(a,b)}function _setPrototypeOf(a,b){return _setPrototypeOf=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},_setPrototypeOf(a,b)}/**
 * WordPress dependencies
 */ // Import registerBlockType() from block building libary
var registerBlockType=wp.blocks.registerBlockType,_wp$element=wp.element,Component=_wp$element.Component,createElement=_wp$element.createElement,__=wp.i18n.__,_wp$editor=wp.editor,AlignmentToolbar=_wp$editor.AlignmentToolbar,BlockControls=_wp$editor.BlockControls,InspectorControls=_wp$editor.InspectorControls,PanelColorSettings=_wp$editor.PanelColorSettings,_wp$components=wp.components,Icon=_wp$components.Icon,ColorPicker=_wp$components.ColorPicker,TextControl=_wp$components.TextControl,SelectControl=_wp$components.SelectControl,ToggleControl=_wp$components.ToggleControl,ServerSideRender=_wp$components.ServerSideRender,PanelBody=_wp$components.PanelBody,PanelRow=_wp$components.PanelRow,RadioControl=_wp$components.RadioControl,RangeControl=_wp$components.RangeControl;// React.createElement
/**
 * Internal dependencies.
 */var customEvent=new Event("gutenbergSlick"),SPTestimonialsSlider=/*#__PURE__*/function(a){function b(){var a;return _classCallCheck(this,b),a=_possibleConstructorReturn(this,_getPrototypeOf(b).apply(this,arguments)),a.toggleShowFeaturedImages=a.createToggleAttribute("showfeaturedimages"),a.toggleAutoplay=a.createToggleAttribute("autoplay"),a.toggleShowArrows=a.createToggleAttribute("showarrows"),a.toggleShowDots=a.createToggleAttribute("showdots"),a.toggleAdaptiveHeight=a.createToggleAttribute("adaptiveheight"),a.togglePaddingSync=a.createToggleAttribute("paddingsync"),a}return _inherits(b,a),_createClass(b,[{key:"createToggleAttribute",value:function createToggleAttribute(a){var b=this;return function(){var c=b.props.attributes[a],d=b.props.setAttributes;d(_defineProperty({},a,!c)),document.dispatchEvent(customEvent)}}/* TOOLTIPS
    --------------------------------------------------------------------- */ // Tooltip - Slider - Autoplay
},{key:"getAutoplayHelp",value:function getAutoplayHelp(a){return a?__("Autplay is enabled.","socialproofslider"):__("Toggle to advance the slides automatically.","socialproofslider")}// Tooltip - Slider - Show Arrows
},{key:"getShowArrowsHelp",value:function getShowArrowsHelp(a){return a?__("Showing the arrows on the Slider.","socialproofslider"):__("Toggle to show the arrows on both sides of the Slider.","socialproofslider")}// Tooltip - Slider - Show Dots
},{key:"getShowDotsHelp",value:function getShowDotsHelp(a){return a?__("Showing the dot indicators below the Slider.","socialproofslider"):__("Toggle to show the dot indicators below the Slider.","socialproofslider")}// Tooltip - Slider - Adaptive Height
},{key:"getAdaptiveHeightHelp",value:function getAdaptiveHeightHelp(a){return a?__("The slider will dynamically adjust height based on each slide's height.","socialproofslider"):__("Toggle to dynamically adjust slider height based on each slide's height.","socialproofslider")}// Tooltip - Slider - Adaptive Height
},{key:"getShowFeaturedImagesHelp",value:function getShowFeaturedImagesHelp(a){return a?__("Showing the Featured Images.","socialproofslider"):__("Toggle to show the Featured Image for each testimonial.","socialproofslider")}},{key:"render",value:function render(){// Update DisplayTime attr
// Update BG Color attr
// Update Testimonials Text Color
// Update Author name Color
// Update Author Title Color
var a=this,b=this.props.attributes,c=this.props.setAttributes;document.dispatchEvent(customEvent);/* CSS Units. */var d=[{value:"px",label:__("Pixel (px)","socialproofslider")},{value:"%",label:__("Percent (%)","socialproofslider")},{value:"em",label:__("Em (em)","socialproofslider")}];/* ------------------------------------------------------------------ */ // Display block preview and UI
return wp.element.createElement(React.Fragment,null,wp.element.createElement(ServerSideRender,{block:"social-proof-slider/main",attributes:b}),wp.element.createElement(BlockControls,null,wp.element.createElement(AlignmentToolbar,{value:b.textalign,onChange:function onChange(a){c({textalign:a}),document.dispatchEvent(customEvent)}})),wp.element.createElement(InspectorControls,null,wp.element.createElement(PanelBody,{title:__("Post Settings","socialproofslider"),initialOpen:!1,className:"spslider-inspector-panel"},wp.element.createElement(PanelRow,null,wp.element.createElement(ToggleControl,{label:__("Show Featured Images","socialproofslider"),checked:!!b.showfeaturedimages,onChange:this.toggleShowFeaturedImages,help:this.getShowFeaturedImagesHelp}))),wp.element.createElement(PanelBody,{title:__("Slider Settings","socialproofslider"),initialOpen:!1,className:"spslider-inspector-panel"},wp.element.createElement(PanelRow,null,wp.element.createElement(ToggleControl,{label:__("Autoplay","socialproofslider"),checked:!!b.autoplay,onChange:this.toggleAutoplay,help:this.getAutoplayHelp})),b.autoplay?wp.element.createElement(RangeControl,{label:__("Display Time (seconds)","socialproofslider"),beforeIcon:"clock",value:b.displaytime,min:1,max:10,initialPosition:3,onChange:function onChange(b){return a.props.setAttributes({displaytime:b})},allowReset:!0,help:__("How long to display each slide before advancing to the next.","socialproofslider")}):null,wp.element.createElement(PanelRow,null,wp.element.createElement(RadioControl,{label:__("Animation Style","socialproofslider"),help:__("Choose how to animate each slide.","socialproofslider"),options:[{label:__("Fade","socialproofslider"),value:"fade"},{label:__("Slide","socialproofslider"),value:"slide"}],onChange:function onChange(b){return a.props.setAttributes({animationstyle:b})},selected:b.animationstyle})),wp.element.createElement(PanelRow,null,wp.element.createElement(ToggleControl,{label:__("Show Arrows","socialproofslider"),checked:!!b.showarrows,onChange:this.toggleShowArrows,help:this.getShowArrowsHelp})),wp.element.createElement(PanelRow,null,wp.element.createElement(ToggleControl,{label:__("Show Dots","socialproofslider"),checked:!!b.showdots,onChange:this.toggleShowDots,help:this.getShowDotsHelp})),wp.element.createElement(PanelRow,null,wp.element.createElement(ToggleControl,{label:__("Adaptive Height","socialproofslider"),checked:!!b.adaptiveheight,onChange:this.toggleAdaptiveHeight,help:this.getAdaptiveHeightHelp}))),wp.element.createElement(PanelBody,{title:__("Margin and Padding","socialproofslider"),initialOpen:!1,className:"spslider-inspector-panel"},wp.element.createElement(SelectControl,{label:__("Padding Unit","socialproofslider"),help:__("Choose between pixel, percent, or em units.","socialproofslider"),options:d,value:b.paddingunit,onChange:function onChange(b){return a.props.setAttributes({paddingunit:b})}}),wp.element.createElement(ToggleControl,{label:__("Sync Padding","socialproofslider"),checked:!!b.paddingsync,onChange:this.togglePaddingSync,help:__("Padding on all sides will have the same value.","socialproofslider")}),b.paddingsync?wp.element.createElement(_padding__WEBPACK_IMPORTED_MODULE_1__["default"]/* Padding. */,{paddingEnable:!0,padding:b.padding,paddingMin:"0",paddingMax:"200",onChangePadding:function onChangePadding(a){return c({padding:a})}}):wp.element.createElement(_padding__WEBPACK_IMPORTED_MODULE_1__["default"]/* Padding top. */,{paddingEnableTop:!0,paddingTop:b.paddingtop,paddingTopMin:"0",paddingTopMax:"200",onChangePaddingTop:function onChangePaddingTop(a){return c({paddingtop:a})}/* Padding right. */,paddingEnableRight:!0,paddingRight:b.paddingright,paddingRightMin:"0",paddingRightMax:"200",onChangePaddingRight:function onChangePaddingRight(a){return c({paddingright:a})}/* Padding bottom. */,paddingEnableBottom:!0,paddingBottom:b.paddingbottom,paddingBottomMin:"0",paddingBottomMax:"200",onChangePaddingBottom:function onChangePaddingBottom(a){return c({paddingbottom:a})}/* Padding left. */,paddingEnableLeft:!0,paddingLeft:b.paddingleft,paddingLeftMin:"0",paddingLeftMax:"200",onChangePaddingLeft:function onChangePaddingLeft(a){return c({paddingleft:a})}})),wp.element.createElement(PanelBody,{title:__("Colors","socialproofslider"),initialOpen:!1,className:"spslider-inspector-panel"},wp.element.createElement(PanelColorSettings,{title:__("Background Color","socialproofslider"),initialOpen:!1,colorSettings:[{value:b.bgcolor,onChange:function(a){c({bgcolor:a}),document.dispatchEvent(customEvent)},label:__("Slider Background Color","socialproofslider")}]}),wp.element.createElement(PanelColorSettings,{title:__("Text Colors"),initialOpen:!1,colorSettings:[{value:b.testimonialtextcolor,onChange:function(a){c({testimonialtextcolor:a}),document.dispatchEvent(customEvent)},label:__("Testimonial Text Color","socialproofslider")},{value:b.authornamecolor,onChange:function(a){c({authornamecolor:a}),document.dispatchEvent(customEvent)},label:__("Author Name Color","socialproofslider")},{value:b.authortitlecolor,onChange:function(a){c({authortitlecolor:a}),document.dispatchEvent(customEvent)},label:__("Author Title Color","socialproofslider")}]}))))}}]),b}(Component);/* harmony default export */ __webpack_exports__["default"] = (SPTestimonialsSlider);

/***/ }),

/***/ "./blocks/src/block/editor.scss":
/*!**************************************!*\
  !*** ./blocks/src/block/editor.scss ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./blocks/src/block/margin.js":
/*!************************************!*\
  !*** ./blocks/src/block/margin.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Margin; });
var __=wp.i18n.__,Fragment=wp.element.Fragment,RangeControl=wp.components.RangeControl;function Margin(a){var b=a.marginTop,c=a.marginTopLabel,d=a.marginTopMin,e=a.marginTopMax,f=a.marginEnableTop,g=a.onChangeMarginTop,h=void 0===g?function(){}:g,i=a.marginRight,j=a.marginRightLabel,k=a.marginRightMin,l=a.marginRightMax,m=a.marginEnableRight,n=a.onChangeMarginRight,o=void 0===n?function(){}:n,p=a.marginBottom,q=a.marginBottomLabel,r=a.marginBottomMin,s=a.marginBottomMax,t=a.marginEnableBottom,u=a.onChangeMarginBottom,v=void 0===u?function(){}:u,w=a.marginLeft,x=a.marginLeftLabel,y=a.marginLeftMin,z=a.marginLeftMax,A=a.marginEnableLeft,B=a.onChangeMarginLeft,C=void 0===B?function(){}:B,D=a.marginVertical,E=a.marginVerticalLabel,F=a.marginEnableVertical,G=a.marginVerticalMin,H=a.marginVerticalMax,I=a.onChangeMarginVertical,J=void 0===I?function(){}:I,K=a.marginHorizontal,L=a.marginHorizontalLabel,M=a.marginEnableHorizontal,N=a.marginHorizontalMin,O=a.marginHorizontalMax,P=a.onChangeMarginHorizontal,Q=void 0===P?function(){}:P;return wp.element.createElement(Fragment,null,f&&wp.element.createElement(RangeControl,{label:c?c:__("Margin Top","atomic-blocks"),value:b,min:d,max:e,onChange:h}),m&&wp.element.createElement(RangeControl,{label:j?j:__("Margin Right","atomic-blocks"),value:i,min:k,max:l,onChange:o}),t&&wp.element.createElement(RangeControl,{label:q?q:__("Margin Bottom","atomic-blocks"),value:p,min:r,max:s,onChange:v}),A&&wp.element.createElement(RangeControl,{label:x?x:__("Margin Left","atomic-blocks"),value:w,min:y,max:z,onChange:C}),F&&wp.element.createElement(RangeControl,{label:E?E:__("Margin Vertical","atomic-blocks"),value:D,min:G,max:H,onChange:J}),M&&wp.element.createElement(RangeControl,{label:L?L:__("Margin Horizontal","atomic-blocks"),value:K,min:N,max:O,onChange:Q}))}

/***/ }),

/***/ "./blocks/src/block/padding.js":
/*!*************************************!*\
  !*** ./blocks/src/block/padding.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Padding; });
var __=wp.i18n.__,Fragment=wp.element.Fragment,RangeControl=wp.components.RangeControl;function Padding(a){var b=a.padding,c=a.paddingTitle,d=a.paddingHelp,e=a.paddingMin,f=a.paddingMax,g=a.paddingEnable,h=a.onChangePadding,i=void 0===h?function(){}:h,j=a.paddingTop,k=a.paddingTopMin,l=a.paddingTopMax,m=a.paddingEnableTop,n=a.onChangePaddingTop,o=void 0===n?function(){}:n,p=a.paddingRight,q=a.paddingRightMin,r=a.paddingRightMax,s=a.paddingEnableRight,t=a.onChangePaddingRight,u=void 0===t?function(){}:t,v=a.paddingBottom,w=a.paddingBottomMin,x=a.paddingBottomMax,y=a.paddingEnableBottom,z=a.onChangePaddingBottom,A=void 0===z?function(){}:z,B=a.paddingLeft,C=a.paddingLeftMin,D=a.paddingLeftMax,E=a.paddingEnableLeft,F=a.onChangePaddingLeft,G=void 0===F?function(){}:F,H=a.paddingVertical,I=a.paddingEnableVertical,J=a.paddingVerticalMin,K=a.paddingVerticalMax,L=a.onChangePaddingVertical,M=void 0===L?function(){}:L,N=a.paddingHorizontal,O=a.paddingEnableHorizontal,P=a.paddingHorizontalMin,Q=a.paddingHorizontalMax,R=a.onChangePaddingHorizontal,S=void 0===R?function(){}:R;return wp.element.createElement(Fragment,null,g&&wp.element.createElement(RangeControl,{label:c?c:__("Padding","atomic-blocks"),help:d?d:null,value:b,min:e,max:f,onChange:i}),m&&wp.element.createElement(RangeControl,{label:__("Padding Top","atomic-blocks"),value:j,min:k,max:l,onChange:o}),s&&wp.element.createElement(RangeControl,{label:__("Padding Right","atomic-blocks"),value:p,min:q,max:r,onChange:u}),y&&wp.element.createElement(RangeControl,{label:__("Padding Bottom","atomic-blocks"),value:v,min:w,max:x,onChange:A}),E&&wp.element.createElement(RangeControl,{label:__("Padding Left","atomic-blocks"),value:B,min:C,max:D,onChange:G}),I&&wp.element.createElement(RangeControl,{label:__("Padding Vertical","atomic-blocks"),value:H,min:J,max:K,onChange:M}),O&&wp.element.createElement(RangeControl,{label:__("Padding Horizontal","atomic-blocks"),value:N,min:P,max:Q,onChange:S}))}

/***/ }),

/***/ "./blocks/src/block/style.scss":
/*!*************************************!*\
  !*** ./blocks/src/block/style.scss ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./blocks/src/blocks.js":
/*!******************************!*\
  !*** ./blocks/src/blocks.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _block_block__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block/block */ "./blocks/src/block/block.js");
/* harmony import */ var _block_edit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block/edit */ "./blocks/src/block/edit.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,